name: Deploy Frontend

on:
  push:
    branches: [dev]
    paths: ['seurasaeng_fe/**']
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: seurasaeng_fe/package-lock.json
        
    - name: Install and Build
      run: |
        cd seurasaeng_fe
        npm ci
        echo "VITE_API_BASE_URL=http://13.125.200.221/api" > .env.production
        echo "VITE_SOCKET_URL=ws://13.125.200.221/ws" >> .env.production
        npm run build
        
    - name: Build Docker Image
      run: |
        cd seurasaeng_fe
        docker buildx build --platform linux/arm64 \
          --build-arg VITE_API_BASE_URL=http://13.125.200.221/api \
          --build-arg VITE_SOCKET_URL=ws://13.125.200.221/ws \
          -t seuraseung-frontend:latest . --load
        docker save seuraseung-frontend:latest | gzip > seurasaeng_fe-image.tar.gz
        
    - name: Copy to Server
      uses: appleboy/scp-action@v0.1.5
      with:
        host: ${{ secrets.FRONT_SERVER_HOST }}
        username: ubuntu
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "seurasaeng_fe-image.tar.gz,seurasaeng_fe/"
        target: "/home/ubuntu/"
        
    - name: Deploy Frontend
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.FRONT_SERVER_HOST }}
        username: ubuntu
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /home/ubuntu/seurasaeng_fe
          chmod +x deploy.sh
          ./deploy.sh
          
    - name: Health Check
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.FRONT_SERVER_HOST }}
        username: ubuntu
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          echo "🔍 서비스 상태 확인..."
          
          # 프론트엔드 확인
          if curl -f http://localhost/health >/dev/null 2>&1; then
            echo "✅ 프론트엔드: 정상"
          else
            echo "❌ 프론트엔드: 실패"
          fi
          
          # 백엔드 확인
          if curl -f http://10.0.2.166:8080 >/dev/null 2>&1; then
            echo "✅ 백엔드: 정상"
            echo "✅ API 프록시: http://13.125.200.221/api/"
          else
            echo "❌ 백엔드: 연결 실패"
          fi
          
          echo "🎉 배포 완료! 접속: http://13.125.200.221"