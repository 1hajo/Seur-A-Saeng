version: '3.8'

networks:
  seuraseung-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

services:
  # PostgreSQL 데이터베이스
  postgres:
    image: postgres:15.12
    container_name: seuraseung-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: seuraseung
      POSTGRES_USER: ${POSTGRES_USER:-seuraseung}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-seuraseung123!}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - seuraseung-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-seuraseung} -d seuraseung"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis 캐시
  redis:
    image: redis:6.0-alpine
    container_name: seuraseung-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123!}
    volumes:
      - redis_data:/data
      - ./database/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    ports:
      - "6379:6379"
    networks:
      - seuraseung-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Spring Boot 애플리케이션
  backend:
    image: seuraseung-backend:latest
    container_name: seuraseung-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # 프로파일 설정
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-prod}
      
      # 데이터베이스 설정
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/seuraseung
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-seuraseung}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-seuraseung123!}
      SPRING_DATASOURCE_SCHEMA: ${DB_SCHEMA:-seurasaeng-prod}
      
      # Redis 설정
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_REDIS_PASSWORD: ${REDIS_PASSWORD:-redis123!}
      SPRING_REDIS_DATABASE: ${REDIS_DATABASE:-0}
      
      # JPA 설정
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${JPA_DDL_AUTO:-validate}
      SPRING_JPA_SHOW_SQL: ${JPA_SHOW_SQL:-false}
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect
      
      # 로깅 설정
      LOGGING_LEVEL_ROOT: ${LOG_LEVEL:-INFO}
      LOGGING_LEVEL_ONEHAJO_SEURASEUNG: ${APP_LOG_LEVEL:-INFO}
      
      # 서버 설정
      SERVER_PORT: 8080
      SERVER_SERVLET_CONTEXT_PATH: /api
      
      # 외부 연결 허용
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,info,metrics
    ports:
      - "8080:8080"
    networks:
      - seuraseung-network
    volumes:
      - /home/ubuntu/logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s